<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="compound" nsURI="http://tools.vitruv/EChange/Compound/1.0" nsPrefix="compound">
  <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
    <details key="modelName" value="Change"/>
    <details key="basePackage" value="tools.vitruv.framework.change.echange"/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="CompoundEChange" abstract="true" eSuperTypes="echange.ecore#//EChange">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="*&#xA;Abstract EChange which is a sequence of several atomic changes."/>
    </eAnnotations>
    <eOperations name="getAtomicChanges" lowerBound="1" upperBound="-1" eType="ecore:EClass echange.ecore#//AtomicEChange">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="*&#xA;Returns the atomic changes of the compound changes, in the same order as they are&#xA;resolved / applied."/>
      </eAnnotations>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ExplicitUnsetEFeature" abstract="true"
      eSuperTypes="#//CompoundEChange">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="*&#xA;Abstract EChange which unsets a single or many valued feature."/>
    </eAnnotations>
    <eTypeParameters name="A">
      <eBounds eClassifier="ecore:EClass ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EObject"/>
    </eTypeParameters>
    <eTypeParameters name="F">
      <eBounds eClassifier="ecore:EClass ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EStructuralFeature"/>
    </eTypeParameters>
    <eStructuralFeatures xsi:type="ecore:EReference" name="affectedEObject" lowerBound="1">
      <eGenericType eTypeParameter="#//ExplicitUnsetEFeature/A"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="affectedFeature" lowerBound="1">
      <eGenericType eTypeParameter="#//ExplicitUnsetEFeature/F"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="affectedEObjectID" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ExplicitUnsetEAttribute">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="*&#xA;EChange which unsets a single or many valued attribute."/>
    </eAnnotations>
    <eTypeParameters name="A">
      <eBounds eClassifier="ecore:EClass ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EObject"/>
    </eTypeParameters>
    <eTypeParameters name="T">
      <eBounds eClassifier="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EJavaObject"/>
    </eTypeParameters>
    <eOperations name="getAtomicChanges" lowerBound="1" upperBound="-1" eType="ecore:EClass echange.ecore#//AtomicEChange">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final &lt;%org.eclipse.emf.common.util.BasicEList%>&lt;&lt;%tools.vitruv.framework.change.echange.AtomicEChange%>> result = new &lt;%org.eclipse.emf.common.util.BasicEList%>&lt;&lt;%tools.vitruv.framework.change.echange.AtomicEChange%>>();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%tools.vitruv.framework.change.echange.feature.attribute.SubtractiveAttributeEChange%>&lt;A, T>> _subtractiveChanges = this.getSubtractiveChanges();&#xA;result.addAll(_subtractiveChanges);&#xA;return result;"/>
      </eAnnotations>
    </eOperations>
    <eGenericSuperTypes eClassifier="#//CompoundSubtraction">
      <eTypeArguments eTypeParameter="#//ExplicitUnsetEAttribute/T"/>
      <eTypeArguments eClassifier="ecore:EClass attribute.ecore#//SubtractiveAttributeEChange">
        <eTypeArguments eTypeParameter="#//ExplicitUnsetEAttribute/A"/>
        <eTypeArguments eTypeParameter="#//ExplicitUnsetEAttribute/T"/>
      </eTypeArguments>
    </eGenericSuperTypes>
    <eGenericSuperTypes eClassifier="#//ExplicitUnsetEFeature">
      <eTypeArguments eTypeParameter="#//ExplicitUnsetEAttribute/A"/>
      <eTypeArguments eClassifier="ecore:EClass ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EAttribute"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ExplicitUnsetEReference">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="*&#xA;EChange which unsets a single or many valued reference."/>
    </eAnnotations>
    <eTypeParameters name="A">
      <eBounds eClassifier="ecore:EClass ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EObject"/>
    </eTypeParameters>
    <eOperations name="getContainedChanges" lowerBound="1" upperBound="-1" eType="ecore:EClass echange.ecore#//EChange">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="*&#xA;Returns the changes this unset consists of. Can also be compound changes, e.g., a RemoveAndDeleteNonRoot"/>
        <details key="body" value="return this.getChanges();"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getAtomicChanges" lowerBound="1" upperBound="-1" eType="ecore:EClass echange.ecore#//AtomicEChange">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%tools.vitruv.framework.change.echange.EChange%>> _changes = this.getChanges();&#xD;&#xA;final &lt;%org.eclipse.xtext.xbase.lib.Functions.Function1%>&lt;&lt;%tools.vitruv.framework.change.echange.EChange%>, &lt;%java.util.List%>&lt;&lt;%tools.vitruv.framework.change.echange.AtomicEChange%>>> _function = new &lt;%org.eclipse.xtext.xbase.lib.Functions.Function1%>&lt;&lt;%tools.vitruv.framework.change.echange.EChange%>, &lt;%java.util.List%>&lt;&lt;%tools.vitruv.framework.change.echange.AtomicEChange%>>>()&#xD;&#xA;{&#xD;&#xA;&#x9;public &lt;%java.util.List%>&lt;&lt;%tools.vitruv.framework.change.echange.AtomicEChange%>> apply(final &lt;%tools.vitruv.framework.change.echange.EChange%> it)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;&lt;%java.util.List%>&lt;&lt;%tools.vitruv.framework.change.echange.AtomicEChange%>> _xifexpression = null;&#xD;&#xA;&#x9;&#x9;if ((it instanceof &lt;%tools.vitruv.framework.change.echange.AtomicEChange%>))&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;_xifexpression = java.util.Collections.&lt;&lt;%tools.vitruv.framework.change.echange.AtomicEChange%>>unmodifiableList(org.eclipse.xtext.xbase.lib.CollectionLiterals.&lt;&lt;%tools.vitruv.framework.change.echange.AtomicEChange%>>newArrayList(((&lt;%tools.vitruv.framework.change.echange.AtomicEChange%>)it)));&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%tools.vitruv.framework.change.echange.AtomicEChange%>> _xifexpression_1 = null;&#xD;&#xA;&#x9;&#x9;&#x9;if ((it instanceof &lt;%tools.vitruv.framework.change.echange.compound.CompoundEChange%>))&#xD;&#xA;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;_xifexpression_1 = ((&lt;%tools.vitruv.framework.change.echange.compound.CompoundEChange%>)it).getAtomicChanges();&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;throw new &lt;%java.lang.IllegalArgumentException%>();&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;_xifexpression = _xifexpression_1;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;return _xifexpression;&#xD;&#xA;&#x9;}&#xD;&#xA;};&#xD;&#xA;&lt;%java.util.List%>&lt;&lt;%java.util.List%>&lt;&lt;%tools.vitruv.framework.change.echange.AtomicEChange%>>> _map = &lt;%org.eclipse.xtext.xbase.lib.ListExtensions%>.&lt;&lt;%tools.vitruv.framework.change.echange.EChange%>, &lt;%java.util.List%>&lt;&lt;%tools.vitruv.framework.change.echange.AtomicEChange%>>>map(_changes, _function);&#xD;&#xA;&lt;%java.lang.Iterable%>&lt;&lt;%tools.vitruv.framework.change.echange.AtomicEChange%>> _flatten = &lt;%com.google.common.collect.Iterables%>.&lt;&lt;%tools.vitruv.framework.change.echange.AtomicEChange%>>concat(_map);&#xD;&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%tools.vitruv.framework.change.echange.AtomicEChange%>>asEList(((&lt;%tools.vitruv.framework.change.echange.AtomicEChange%>[])org.eclipse.xtext.xbase.lib.Conversions.unwrapArray(_flatten, &lt;%tools.vitruv.framework.change.echange.AtomicEChange%>.class)));"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="changes" lowerBound="1"
        upperBound="-1" eType="ecore:EClass echange.ecore#//EChange" containment="true"
        resolveProxies="false"/>
    <eGenericSuperTypes eClassifier="#//ExplicitUnsetEFeature">
      <eTypeArguments eTypeParameter="#//ExplicitUnsetEReference/A"/>
      <eTypeArguments eClassifier="ecore:EClass ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EReference"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CompoundSubtraction" abstract="true"
      eSuperTypes="#//CompoundEChange">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="*&#xA;EChange which replaces an EObject in an EList."/>
    </eAnnotations>
    <eTypeParameters name="T">
      <eBounds eClassifier="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EJavaObject"/>
    </eTypeParameters>
    <eTypeParameters name="S">
      <eBounds eClassifier="ecore:EClass echange.ecore#//SubtractiveEChange">
        <eTypeArguments eTypeParameter="#//CompoundSubtraction/T"/>
      </eBounds>
    </eTypeParameters>
    <eOperations name="getAtomicChanges" lowerBound="1" upperBound="-1" eType="ecore:EClass echange.ecore#//AtomicEChange">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final &lt;%org.eclipse.emf.common.util.BasicEList%>&lt;&lt;%tools.vitruv.framework.change.echange.AtomicEChange%>> result = new &lt;%org.eclipse.emf.common.util.BasicEList%>&lt;&lt;%tools.vitruv.framework.change.echange.AtomicEChange%>>();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;S> _subtractiveChanges = this.getSubtractiveChanges();&#xA;result.addAll(_subtractiveChanges);&#xA;return result;"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="subtractiveChanges" lowerBound="1"
        upperBound="-1" containment="true" resolveProxies="false">
      <eGenericType eTypeParameter="#//CompoundSubtraction/S"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CompoundAddition" abstract="true" eSuperTypes="#//CompoundEChange">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="*&#xA;Abstract change which combines several additive EChanges of the same type."/>
    </eAnnotations>
    <eTypeParameters name="T">
      <eBounds eClassifier="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EJavaObject"/>
    </eTypeParameters>
    <eTypeParameters name="S">
      <eBounds eClassifier="ecore:EClass echange.ecore#//AdditiveEChange">
        <eTypeArguments eTypeParameter="#//CompoundAddition/T"/>
      </eBounds>
    </eTypeParameters>
    <eOperations name="getAtomicChanges" lowerBound="1" upperBound="-1" eType="ecore:EClass echange.ecore#//AtomicEChange">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="final &lt;%org.eclipse.emf.common.util.BasicEList%>&lt;&lt;%tools.vitruv.framework.change.echange.AtomicEChange%>> result = new &lt;%org.eclipse.emf.common.util.BasicEList%>&lt;&lt;%tools.vitruv.framework.change.echange.AtomicEChange%>>();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;S> _additiveChanges = this.getAdditiveChanges();&#xA;result.addAll(_additiveChanges);&#xA;return result;"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="additiveChanges" lowerBound="1"
        upperBound="-1" containment="true" resolveProxies="false">
      <eGenericType eTypeParameter="#//CompoundAddition/S"/>
    </eStructuralFeatures>
  </eClassifiers>
</ecore:EPackage>
