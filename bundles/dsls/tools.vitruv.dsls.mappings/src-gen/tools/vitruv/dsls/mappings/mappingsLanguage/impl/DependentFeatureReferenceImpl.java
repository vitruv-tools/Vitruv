/**
 * generated by Xtext 2.12.0
 */
package tools.vitruv.dsls.mappings.mappingsLanguage.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import tools.vitruv.dsls.mappings.mappingsLanguage.Dependency;
import tools.vitruv.dsls.mappings.mappingsLanguage.DependentFeatureReference;
import tools.vitruv.dsls.mappings.mappingsLanguage.MappingsLanguagePackage;

import tools.vitruv.dsls.mirbase.mirBase.MetaclassFeatureReference;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Dependent Feature Reference</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link tools.vitruv.dsls.mappings.mappingsLanguage.impl.DependentFeatureReferenceImpl#getDependeeShortName <em>Dependee Short Name</em>}</li>
 *   <li>{@link tools.vitruv.dsls.mappings.mappingsLanguage.impl.DependentFeatureReferenceImpl#getDependeeFeature <em>Dependee Feature</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DependentFeatureReferenceImpl extends FeatureReferenceImpl implements DependentFeatureReference
{
  /**
   * The cached value of the '{@link #getDependeeShortName() <em>Dependee Short Name</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDependeeShortName()
   * @generated
   * @ordered
   */
  protected Dependency dependeeShortName;

  /**
   * The cached value of the '{@link #getDependeeFeature() <em>Dependee Feature</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDependeeFeature()
   * @generated
   * @ordered
   */
  protected MetaclassFeatureReference dependeeFeature;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DependentFeatureReferenceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MappingsLanguagePackage.Literals.DEPENDENT_FEATURE_REFERENCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Dependency getDependeeShortName()
  {
    if (dependeeShortName != null && dependeeShortName.eIsProxy())
    {
      InternalEObject oldDependeeShortName = (InternalEObject)dependeeShortName;
      dependeeShortName = (Dependency)eResolveProxy(oldDependeeShortName);
      if (dependeeShortName != oldDependeeShortName)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MappingsLanguagePackage.DEPENDENT_FEATURE_REFERENCE__DEPENDEE_SHORT_NAME, oldDependeeShortName, dependeeShortName));
      }
    }
    return dependeeShortName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Dependency basicGetDependeeShortName()
  {
    return dependeeShortName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDependeeShortName(Dependency newDependeeShortName)
  {
    Dependency oldDependeeShortName = dependeeShortName;
    dependeeShortName = newDependeeShortName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MappingsLanguagePackage.DEPENDENT_FEATURE_REFERENCE__DEPENDEE_SHORT_NAME, oldDependeeShortName, dependeeShortName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MetaclassFeatureReference getDependeeFeature()
  {
    return dependeeFeature;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDependeeFeature(MetaclassFeatureReference newDependeeFeature, NotificationChain msgs)
  {
    MetaclassFeatureReference oldDependeeFeature = dependeeFeature;
    dependeeFeature = newDependeeFeature;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MappingsLanguagePackage.DEPENDENT_FEATURE_REFERENCE__DEPENDEE_FEATURE, oldDependeeFeature, newDependeeFeature);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDependeeFeature(MetaclassFeatureReference newDependeeFeature)
  {
    if (newDependeeFeature != dependeeFeature)
    {
      NotificationChain msgs = null;
      if (dependeeFeature != null)
        msgs = ((InternalEObject)dependeeFeature).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MappingsLanguagePackage.DEPENDENT_FEATURE_REFERENCE__DEPENDEE_FEATURE, null, msgs);
      if (newDependeeFeature != null)
        msgs = ((InternalEObject)newDependeeFeature).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MappingsLanguagePackage.DEPENDENT_FEATURE_REFERENCE__DEPENDEE_FEATURE, null, msgs);
      msgs = basicSetDependeeFeature(newDependeeFeature, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MappingsLanguagePackage.DEPENDENT_FEATURE_REFERENCE__DEPENDEE_FEATURE, newDependeeFeature, newDependeeFeature));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MappingsLanguagePackage.DEPENDENT_FEATURE_REFERENCE__DEPENDEE_FEATURE:
        return basicSetDependeeFeature(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MappingsLanguagePackage.DEPENDENT_FEATURE_REFERENCE__DEPENDEE_SHORT_NAME:
        if (resolve) return getDependeeShortName();
        return basicGetDependeeShortName();
      case MappingsLanguagePackage.DEPENDENT_FEATURE_REFERENCE__DEPENDEE_FEATURE:
        return getDependeeFeature();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MappingsLanguagePackage.DEPENDENT_FEATURE_REFERENCE__DEPENDEE_SHORT_NAME:
        setDependeeShortName((Dependency)newValue);
        return;
      case MappingsLanguagePackage.DEPENDENT_FEATURE_REFERENCE__DEPENDEE_FEATURE:
        setDependeeFeature((MetaclassFeatureReference)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MappingsLanguagePackage.DEPENDENT_FEATURE_REFERENCE__DEPENDEE_SHORT_NAME:
        setDependeeShortName((Dependency)null);
        return;
      case MappingsLanguagePackage.DEPENDENT_FEATURE_REFERENCE__DEPENDEE_FEATURE:
        setDependeeFeature((MetaclassFeatureReference)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MappingsLanguagePackage.DEPENDENT_FEATURE_REFERENCE__DEPENDEE_SHORT_NAME:
        return dependeeShortName != null;
      case MappingsLanguagePackage.DEPENDENT_FEATURE_REFERENCE__DEPENDEE_FEATURE:
        return dependeeFeature != null;
    }
    return super.eIsSet(featureID);
  }

} //DependentFeatureReferenceImpl
