/*
 * generated by Xtext 2.10.0-SNAPSHOT
 */
package tools.vitruv.dsls.mirbase.validation

import tools.vitruv.dsls.mirbase.mirBase.MirBasePackage
import org.eclipse.xtext.validation.Check

import tools.vitruv.dsls.mirbase.mirBase.DomainReference
import tools.vitruv.framework.domains.VitruvDomainProviderRegistry

/**
 * This class contains custom validation rules. 
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class MirBaseValidator extends AbstractMirBaseValidator {
	@Check
	def checkDomainReference(DomainReference domainReference) {
		if (!domainReference.isValid) {
			val domainNames = VitruvDomainProviderRegistry.allDomainProviders.map[domain.name]
			error(
				'''No domain with the specified name found. Available domains are : «FOR domainName : domainNames SEPARATOR ", "»«domainName»«ENDFOR»''',
				domainReference,
				MirBasePackage.Literals.DOMAIN_REFERENCE__DOMAIN
			)
		}
	}

	def static boolean isValid(DomainReference domainReference) {
		val domainNames = VitruvDomainProviderRegistry.allDomainProviders.map[domain.name].toList
		return domainNames.contains(domainReference.domain)
	}
}
