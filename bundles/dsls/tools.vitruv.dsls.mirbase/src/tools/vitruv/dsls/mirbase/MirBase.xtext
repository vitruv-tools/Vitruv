grammar tools.vitruv.dsls.mirbase.MirBase
	with org.eclipse.xtext.xbase.Xbase hidden(WS, SL_COMMENT)

generate mirBase "http://www.kit.edu/ipd/sdq/vitruvius/dsls/mirbase/MirBase"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

DummyEntryRule:
	MirBaseFile;

fragment MirBaseFile:
	(metamodelImports+=MetamodelImport)*;

MetamodelImport:
	'import' package=[ecore::EPackage|STRING] 'as' name=ValidID (useQualifiedNames?='using' 'qualified' 'names')?;

NamedJavaElement:
	type=JvmTypeReference 'as' name=ValidID;

fragment MetaclassReference returns MetaclassReference:
	(metamodel=[MetamodelImport] '::')? metaclass=[ecore::EClass|QualifiedName] 
;

UnnamedMetaclassReference returns MetaclassReference:
	MetaclassReference;

NamedMetaclassReference returns NamedMetaclassReference:
	MetaclassReference ('as' name=ValidID)?
;

ClassicallyNamedModelElement returns NamedMetaclassReference:
	MetaclassReference name=ValidID
;

//fragment ModelElement:
//	element=[ecore::EClass|QualifiedName]
//;
//
//UnnamedModelElement:
//	ModelElement;
//		
//NamedModelElement:
//	ModelElement ('as' name=ValidID)?
//;
	
MetaclassFeatureReference:
	MetaclassReference '[' feature=[ecore::EStructuralFeature|ValidID] ']'
;

MetaclassEAttributeReference:
	MetaclassReference '[' feature=[ecore::EAttribute|ValidID] ']'
;

MetaclassEReferenceReference:
	MetaclassReference '[' feature=[ecore::EReference|ValidID] ']'
;

MetamodelReference:
	model=[MetamodelImport]
;

DomainReference:
	domain=ID
;
