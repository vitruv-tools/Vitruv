module generate

import org.eclipse.emf.mwe2.ecore.EcoreGenerator
import org.eclipse.emf.mwe.utils.StandaloneSetup

var pluginName = "tools.vitruv.testutils.metamodels"
var platformPluginPath = "platform:/resource/${pluginName}"
var metamodelsPath = "${platformPluginPath}/metamodels"

Workflow {

	bean = StandaloneSetup {
		scanClassPath = true
		platformUri = "."
	}

	component = EcoreGenerator {
		srcPath = "${platformPluginPath}/src"
		genModel = "${metamodelsPath}/allElementTypes.genmodel"
		generateCustomClasses = false
	}

	component = EcoreGenerator {
		srcPath = "${platformPluginPath}/src"
		genModel = "${metamodelsPath}/allElementTypes2.genmodel"
		generateCustomClasses = false
	}

	component = EcoreGenerator {
		srcPath = "${platformPluginPath}/src"
		genModel = "${metamodelsPath}/attributeToStructureAttr.genmodel"
		generateCustomClasses = false
	}

	component = EcoreGenerator {
		srcPath = "${platformPluginPath}/src"
		genModel = "${metamodelsPath}/attributeToStructureStruct1.genmodel"
		generateCustomClasses = false
	}

	component = EcoreGenerator {
		srcPath = "${platformPluginPath}/src"
		genModel = "${metamodelsPath}/multicontainment_a.genmodel"
		generateCustomClasses = false
	}

	component = EcoreGenerator {
		srcPath = "${platformPluginPath}/src"
		genModel = "${metamodelsPath}/multicontainment_b.genmodel"
		generateCustomClasses = false
	}

	component = EcoreGenerator {
		srcPath = "${platformPluginPath}/src"
		genModel = "${metamodelsPath}/pcm_mockup.genmodel"
		generateCustomClasses = false
	}

	component = EcoreGenerator {
		srcPath = "${platformPluginPath}/src"
		genModel = "${metamodelsPath}/uml_mockup.genmodel"
		generateCustomClasses = false
	}

}
