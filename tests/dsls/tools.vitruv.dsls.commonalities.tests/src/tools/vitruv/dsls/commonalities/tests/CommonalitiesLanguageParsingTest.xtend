/*
 * generated by Xtext 2.12.0
 */
package tools.vitruv.dsls.commonalities.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.Test
import org.junit.runner.RunWith
import tools.vitruv.dsls.commonalities.language.CommonalityFile

import static org.hamcrest.CoreMatchers.*
import static org.hamcrest.MatcherAssert.assertThat
import static tools.vitruv.dsls.commonalities.tests.matchers.EResourceMatchers.*

@RunWith(XtextRunner)
@InjectWith(CommonalitiesLanguageInjectorProvider)
class CommonalitiesLanguageParsingTest {

	@Inject
	ParseHelper<CommonalityFile> parseHelper

	@Test
	def void todo() {}

	def void parseTest(CharSequence... inputs) {
		inputs.forEach [ input |
			val result = parseHelper.parse(input)
			val errorMessage = '''Could not parse:
			
			 «input»
			 '''
			assertThat(errorMessage, result, is(notNullValue))
			assertThat(errorMessage, result.eResource, hasNoErrors)
		]
	}

	def CharSequence[] variation(CharSequence input, CharSequence find, CharSequence replace) {
		#[
			input,
			input.toString.replace(find, replace)
		]
	}
}
