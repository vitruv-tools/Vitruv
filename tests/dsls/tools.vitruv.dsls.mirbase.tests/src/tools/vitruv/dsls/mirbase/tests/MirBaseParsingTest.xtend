/*
 * generated by Xtext 2.24.0
 */
package tools.vitruv.dsls.mirbase.tests

import static org.hamcrest.CoreMatchers.*
import static org.hamcrest.MatcherAssert.assertThat
import static org.junit.jupiter.api.Assertions.assertTrue

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import tools.vitruv.dsls.mirbase.mirBase.DummyEntryRule

@ExtendWith(InjectionExtension)
@InjectWith(MirBaseInjectorProvider)
class MirBaseParsingTest {
	@Inject
	ParseHelper<DummyEntryRule> parseHelper

	@Test
	def void todo() {}

	def void parseTest(CharSequence... inputs) {
		inputs.forEach [ input |
			val result = parseHelper.parse(input)
			val errorMessage = '''Could not parse:
			
			«input»
			 '''
			assertThat(errorMessage, result, is(notNullValue))
			val errors = result.eResource.errors
			assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
		]
	}

}
